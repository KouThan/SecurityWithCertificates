#!/bin/sh


#you can change these values to change the number of CAs generated
DAYS=$((3*365))
CAS=3
DN="/C=GR/ST=Attiki/L=Athens/O=Harokopoio/OU=PKI"
touch index.txt

############################################################
# Generate root certificate authority cert
############################################################


#generate root key pair
openssl genrsa -out root.key.pem 4096

#generate root self-signed cert
openssl req -new -x509 -extensions v3_ca -key root.key.pem -out root.crt -days $DAYS -subj "$DN/CN=Root" -config ./openssl.cnf


#creating the certification chains
cat root.crt > chain1.crt
cat root.crt > chain2.crt
cat root.crt > chain3.crt

############################################################
# Generate subordinate certificate authority hierarchy
############################################################

for i in `seq 1 $CAS`; do
    	echo "CA $i"
    
    	SIGNER_CERT=root.crt
   	 SIGNER_KEY=root.key.pem
    

    	#generate key pair
   	 openssl genrsa -out ca$i.key.pem 4096

    	#generate signing request
    	openssl req -config ./openssl.cnf -new -key ca$i.key.pem -subj "$DN/CN=CA$i" -out ca$i.csr 

    	#sign new cert
    	openssl x509 -req -days $DAYS -in ca$i.csr -CA $SIGNER_CERT -CAkey $SIGNER_KEY \
            -set_serial $i -out ca$i.crt
    	cat ca$i.crt >> chain$i.crt


	############################################################
	# Generate cert for client signed by leaf CAs
	############################################################

	#generate key pair
	openssl genrsa -out client$i.key.pem 4096

	#generate signing request
	openssl req -new -key client$i.key.pem -subj "$DN/CN=Client$i" -out client$i.csr

	#sign new cert
	openssl x509 -req -days $DAYS -in client$i.csr -CA ca$i.crt \
    -CAkey ca$i.key.pem -set_serial 400 -out client$i.crt


done

############################################################
# Establishing trust between CA1 and CA2
############################################################
cat ca1.crt >> chain2.crt
cat ca2.crt >> chain1.crt
