#!/bin/sh


#you can change these values to change the number of CAs tested
CAS=3
Clients=3
############################################################
# Verify the the certificates without a CRL
############################################################

#generate root key pair
openssl genrsa -out root.key 4096

#generate root self-signed cert
openssl req -new -x509 -days $DAYS -key root.key -subj "$DN/CN=Root" -out root.crt
#creating the certification chains
cat root.crt > chain1.crt
cat root.crt > chain2.crt
cat root.crt > chain3.crt

############################################################
# Generate subordinate certificate authority hierarchy
############################################################

for i in `seq 1 $CAS`; do

	#verifying Certificates against themselves
    	echo "Verifying CA $i using chain$i.crt"
    	openssl verify -CAfile chain$i.crt ca$i.crt
done

#verifying clients using all CAs
for i in `seq 1 $CAS`; do
	for j in `seq 1 $Clients`; do
			
		echo "Verifying client: client$j.crt using chain$i.crt"
		openssl verify -CAfile chain$i.crt client$j.crt
	done
done

############################################################
# Creating CRL that includes CA2
############################################################
#revoking ca2
openssl ca -config ./openssl.cnf -revoke ca2.crt
#generating the crl
openssl ca -config ./openssl.cnf -gencrl -out crl.pem


############################################################
# Verify the the certificates using a CRL
############################################################
for i in `seq 1 $CAS`; do

	#verifying Certificates using a crl
    	echo "Verifying CA $i using chain$i.crt"
    	openssl verify -crl_check -CAfile chain$i.crt ca$i.crt
done

